"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6570],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=d(n),f=o,m=l["".concat(c,".").concat(f)]||l[f]||p[f]||a;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<a;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1232:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return l}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={slug:"/advanced-kubernetes/advanced-pod-settings",id:"intro",title:"Advanced Pod Settings"},c="Advanced Pod Settings",d={unversionedId:"kubernetes2/module-advanced-pods/intro",id:"kubernetes2/module-advanced-pods/intro",title:"Advanced Pod Settings",description:"Previous sections cover Pod basics explaining what a Pod is and how to declaratively describe one.",source:"@site/docs/kubernetes2/module-advanced-pods/10-intro.md",sourceDirName:"kubernetes2/module-advanced-pods",slug:"/advanced-kubernetes/advanced-pod-settings",permalink:"/advanced-kubernetes/advanced-pod-settings",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{slug:"/advanced-kubernetes/advanced-pod-settings",id:"intro",title:"Advanced Pod Settings"},sidebar:"docs",previous:{title:"Overview",permalink:"/advanced-kubernetes"},next:{title:"Pod Health",permalink:"/advanced-kubernetes/pod-health"}},u={},l=[],p={toc:l},f="wrapper";function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)(f,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"advanced-pod-settings"},"Advanced Pod Settings"),(0,a.kt)("p",null,"Previous sections cover ",(0,a.kt)("a",{parentName:"p",href:"https://learn.kubernetes.anynines.com/kubernetes/pods/introduction"},"Pod basics")," explaining what a Pod is and how to declaratively describe one."),(0,a.kt)("p",null,"It has been described how a Pod is the smallest schedulable unit in Kubernetes, may contain one or several InitContainers and Containers, that they may share volumes and share a loopback network device with a common port range."),(0,a.kt)("p",null,"In this section, more advanced Pod settings are discussed such as ",(0,a.kt)("strong",{parentName:"p"},"Pod scheduling and health monitoring"),"."),(0,a.kt)("p",null,"When provisioning one or even multiple distributed systems to a single Kubernetes cluster, many microservices will co-exist within the cluster potentionally competing for Kubernetes Node resources. It is therefore valuable to ",(0,a.kt)("strong",{parentName:"p"},"understand how the Kubernetes scheduler places Pods")," among Kubernetes Nodes and ",(0,a.kt)("strong",{parentName:"p"},"what happens if resources become scarce and Pods fail"),"."),(0,a.kt)("p",null,"Kubernetes has built-in health-monitoring capabilities. In previous sections, the self-healing of failed Pods has already been studied. In this section, we'll have a closer look at how the ",(0,a.kt)("strong",{parentName:"p"},"health and readiness")," of a container are determined. More than that, we'll see that health and readiness probes can be customized to context specific needs."))}m.isMDXComponent=!0}}]);